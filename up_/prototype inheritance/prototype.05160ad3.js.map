{"mappings":"AAAA,MAAMA,EAAO,CACXC,MAAO,OACPC,OAAQ,GACRC,SAAS,EACTC,SACEC,KAAKC,WAAY,IAIPC,OAAOC,OAAOR,GACtBG,SAAU,EAGV,IAAFM,EAAS,CACXC,MAAM,EACNC,KAAM,SACNC,OACOP,KAAKQ,YACRC,MAAK,WAGTC,QACEV,KAAKQ,YAAa,GAGpBG,QAAQC,GACNZ,KAAKM,KAAOM,IAIZC,EAAS,CACXC,OAAO,EACPR,KAAM,eACNS,UAAWX,GAIDS,EAALH,QACPN,EAAOM,QACPG,EAAOP,KAAO,aAEdU,QAAQC,IAAIJ,EAAOL,YACnBQ,QAAQC,IAAIb,EAAOI,YACnBQ,QAAQC,IAAIJ,EAAOP,MACnBU,QAAQC,IAAIb,EAAOE,MAEnBF,EAAOO,QAAQ,YACPK,QAAAC,IAAIb,EAAOE,MACnBU,QAAQC,IAAIJ,EAAOP,MACnBO,EAAOF,QAAQ,UAYfK,QAAQC,IAAI,SAAUf,OAAOgB,KAAKL,IAClCG,QAAQC,IAAI,SAAUf,OAAOgB,KAAKd,IA+BlCY,QAAQC,IAAsB,cARdE,MAAM,IAAIC,QAAM,CAAEC,EAAKC,EAAMC,IACrCD,EAAKC,KAAOD,EAAK,GACXD,EAAOC,EAAKE,cAEdH,EAAOC,GACd,KAKL,MAAMG,EAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,OAElBC,EAwBjBV,QAAQC,KAxBSS,EAwBGD,EAvBXE,KAAKC,OAAOF,KAwBrBV,QAAQC,aArBSS,GACf,OAAOC,KAAKE,OAAOH,GAoBTI,CAAQL,IAEpBT,QAAQC,IAAI,KAGZD,QAAQC,IADO,CAAC,MAAO,OAAQ,OACZc,UACnBf,QAAQC,KAAI,GACZD,QAAQC,KAAI,GAEZD,QAAQC,IAAI,UACZD,QAAQC,IAAI","sources":["prototype inheritance/prototype.js"],"sourcesContent":["const user = {\n  login: 'NAME',\n  avatar: '',\n  isAdmin: false,\n  search() {\n    this.searching = true;\n  },\n};\n\nconst admin = Object.create(user);\nadmin.isAdmin = true;\n\n// методы animal\nlet animal = {\n  eats: true,\n  name: 'animal',\n  walk() {\n    if (!this.isSleeping) {\n      alert(`I walk`);\n    }\n  },\n  sleep() {\n    this.isSleeping = true;\n  },\n\n  setName(newName) {\n    this.name = newName;\n  },\n};\n\nlet rabbit = {\n  jumps: true,\n  name: 'White Rabbit',\n  __proto__: animal,\n};\n\n// модифицирует rabbit.isSleeping\nrabbit.sleep();\nanimal.sleep();\nrabbit.name = 'Big rabbit';\n\nconsole.log(rabbit.isSleeping);\nconsole.log(animal.isSleeping);\nconsole.log(rabbit.name);\nconsole.log(animal.name);\n\nanimal.setName('Животное');\nconsole.log(animal.name);\nconsole.log(rabbit.name);\nrabbit.setName('Кролик');\n\n// console.log(rabbit.name);\n\n// console.log(Object.keys(rabbit));\n// for (const prop in rabbit) {\n//   if (!rabbit.hasOwnProperty(prop)) {\n//     return;\n//   }\n//   console.log(prop);\n// }\n\nconsole.log('rabbit', Object.keys(rabbit));\nconsole.log('animal', Object.keys(animal));\n\nlet head = {\n  glasses: 1,\n};\n\nlet table = {\n  pen: 3,\n  __proto__: head,\n};\n\nlet bed = {\n  sheet: 1,\n  pillow: 2,\n  __proto__: table,\n};\n\nlet pockets = {\n  money: 2000,\n  __proto__: bed,\n};\n\nfunction stringToUpperCase(string) {\n  return string.split('').reduce((acc, item, i) => {\n    if (item[i] === item[0]) {\n      return (acc += item.toUpperCase());\n    }\n    return (acc += item);\n  }, []);\n}\n\nconsole.log(stringToUpperCase('hello world'));\n\nconst marks = [20, 40, 50, 60, 10, 9];\n\nfunction findMax(arr) {\n  return Math.max(...arr);\n}\n\nfunction findMin(arr) {\n  return Math.min(...arr);\n}\n// function findMin(arr) {\n//   return arr.reduce((acc, num) => {\n//     if (num < acc) {\n//       acc = num;\n//     }\n//     return acc;\n//   });\n// }\n\n// function findMax(arr) {\n//   return arr.reduce((acc, num) => {\n//     if (num > acc) {\n//       acc = num;\n//     }\n//     return acc;\n//   });\n// }\nconsole.log(findMax(marks));\nconsole.log(findMin(marks));\n\nconsole.log('Hello world'[0]);\n\nconst cities = ['wro', 'kiev', 'wwa'];\nconsole.log(cities.splice());\nconsole.log(null == undefined);\nconsole.log(null === undefined);\n\nconsole.log(typeof null);\nconsole.log(typeof undefined);\n"],"names":["$de15081c0d32bc37$var$user","login","avatar","isAdmin","search","this","searching","Object","create","$de15081c0d32bc37$var$animal","eats","name","walk","isSleeping","alert","sleep","setName","newName","$de15081c0d32bc37$var$rabbit","jumps","__proto__","console","log","keys","split","reduce","acc","item","i","toUpperCase","$de15081c0d32bc37$var$marks","arr","Math","max","min","$de15081c0d32bc37$var$findMin","splice"],"version":3,"file":"prototype.05160ad3.js.map"}